// Test file ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
import { 
  generateDailyRecommendation,
  assessDailyPerformance,
  calculateDailyScore,
  type DailyNutritionData,
  type RecommendedNutrition,
  type UserProfile
} from './dailyRecommendationService';

// Mock Data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
export const mockUserProfiles: UserProfile[] = [
  {
    target_goal: 'decrease',
    weight: 70,
    age: 28,
    activity_level: 'moderate'
  },
  {
    target_goal: 'increase',
    weight: 60,
    age: 25,
    activity_level: 'high'
  },
  {
    target_goal: 'healthy',
    weight: 65,
    age: 30,
    activity_level: 'low'
  }
];

export const mockRecommendedNutrition: RecommendedNutrition[] = [
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
  {
    calories: 1800,
    protein: 90,   // 1.3g/kg √ó 70kg
    carbs: 225,    // 50% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
    fat: 60        // 30% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
  },
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
  {
    calories: 2200,
    protein: 84,   // 1.4g/kg √ó 60kg
    carbs: 330,    // 60% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
    fat: 61        // 25% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
  },
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û
  {
    calories: 2000,
    protein: 78,   // 1.2g/kg √ó 65kg
    carbs: 275,    // 55% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
    fat: 67        // 30% ‡∏Ç‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà
  }
];

export const mockActualIntake: DailyNutritionData[] = [
  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏¥‡∏ô‡∏î‡∏µ - ‡∏ö‡∏£‡∏£‡∏•‡∏∏‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà
  {
    calories: 1847,  // 103% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    protein: 85,     // 94% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    carbs: 234,      // 104% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    fat: 62          // 103% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  },
  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢ - ‡∏Ç‡∏≤‡∏î‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
  {
    calories: 1450,  // 81% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    protein: 65,     // 72% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    carbs: 180,      // 80% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    fat: 45          // 75% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  },
  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏Å - ‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  {
    calories: 2100,  // 117% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    protein: 95,     // 106% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    carbs: 280,      // 124% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    fat: 85          // 142% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  },
  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏î‡∏µ - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏∏‡∏Å‡∏î‡πâ‡∏≤‡∏ô
  {
    calories: 1980,  // 99% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    protein: 79,     // 101% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    carbs: 272,      // 99% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    fat: 66          // 99% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  },
  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏π‡∏á - ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
  {
    calories: 2150,  // 98% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    protein: 110,    // 131% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    carbs: 300,      // 91% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    fat: 70          // 115% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
  }
];

// Test scenarios
export const testScenarios = [
  {
    name: "‡∏Ñ‡∏ô‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å - ‡∏Å‡∏¥‡∏ô‡∏î‡∏µ",
    userProfile: mockUserProfiles[0],
    recommended: mockRecommendedNutrition[0],
    actualIntake: mockActualIntake[0]
  },
  {
    name: "‡∏Ñ‡∏ô‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å - ‡∏Å‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢",
    userProfile: mockUserProfiles[0],
    recommended: mockRecommendedNutrition[0],
    actualIntake: mockActualIntake[1]
  },
  {
    name: "‡∏Ñ‡∏ô‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å - ‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏Å",
    userProfile: mockUserProfiles[0],
    recommended: mockRecommendedNutrition[0],
    actualIntake: mockActualIntake[2]
  },
  {
    name: "‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û - ‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏î‡∏µ",
    userProfile: mockUserProfiles[2],
    recommended: mockRecommendedNutrition[2],
    actualIntake: mockActualIntake[3]
  },
  {
    name: "‡∏Ñ‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å - ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏π‡∏á",
    userProfile: mockUserProfiles[1],
    recommended: mockRecommendedNutrition[1],
    actualIntake: mockActualIntake[4]
  }
];

/**
 * ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
export function runAllTests() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô\n');
  console.log('='.repeat(60));
  
  testScenarios.forEach((scenario, index) => {
    console.log(`\nüìã ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${index + 1}: ${scenario.name}`);
    console.log('-'.repeat(40));
    
    const recommendation = generateDailyRecommendation(
      scenario.actualIntake,
      scenario.recommended,
      scenario.userProfile
    );
    
    console.log(`üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${recommendation.date}`);
    console.log(`${recommendation.summary}`);
    console.log(`\nüí™ ‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£:`);
    recommendation.nutritionAdvice.forEach(advice => console.log(`  ${advice}`));
    
    console.log(`\nüèÉ‚Äç‚ôÇÔ∏è ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°:`);
    recommendation.activityAdvice.forEach(advice => console.log(`  ${advice}`));
    
    console.log(`\nüíß ‡∏ô‡πâ‡∏≥:`);
    recommendation.hydrationAdvice.forEach(advice => console.log(`  ${advice}`));
    
    console.log(`\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:`);
    recommendation.timingAdvice.forEach(advice => console.log(`  ${advice}`));
    
    console.log(`\nüéØ ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ:`);
    recommendation.tomorrowTips.forEach(tip => console.log(`  ${tip}`));
    
    console.log('\n' + '='.repeat(60));
  });
  
  console.log('\n‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
}

/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
 */
export function testNutrientAssessment() {
  console.log('üî¨ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£\n');
  
  const testCases = [
    { actual: 90, target: 100, type: 'protein', expected: 'need_more' },
    { actual: 95, target: 100, type: 'calories', expected: 'excellent' },
    { actual: 120, target: 100, type: 'carbs', expected: 'excellent' },
    { actual: 150, target: 100, type: 'fat', expected: 'excessive' }
  ];
  
  testCases.forEach((testCase, index) => {
    console.log(`‡∏ó‡∏î‡∏™‡∏≠‡∏ö ${index + 1}: ${testCase.type} = ${testCase.actual}/${testCase.target}`);
    
    const assessment = assessDailyPerformance(
      { calories: testCase.actual, protein: testCase.actual, carbs: testCase.actual, fat: testCase.actual },
      { calories: testCase.target, protein: testCase.target, carbs: testCase.target, fat: testCase.target }
    );
    
    const result = assessment[testCase.type as keyof typeof assessment];
    console.log(`  ‚úì ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${result.status}`);
    console.log(`  ‚úì ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ${result.score}/25`);
    console.log(`  ‚úì ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå: ${result.percentage.toFixed(1)}%\n`);
  });
}

/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°
 */
export function testScoreCalculation() {
  console.log('üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô\n');
  
  const testAssessments = [
    // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°
    { calories: { score: 25 }, protein: { score: 25 }, carbs: { score: 25 }, fat: { score: 25 } },
    // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡∏µ
    { calories: { score: 20 }, protein: { score: 20 }, carbs: { score: 20 }, fat: { score: 20 } },
    // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏≠‡πÉ‡∏ä‡πâ
    { calories: { score: 15 }, protein: { score: 15 }, carbs: { score: 15 }, fat: { score: 15 } },
    // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡πà‡∏≥
    { calories: { score: 10 }, protein: { score: 10 }, carbs: { score: 10 }, fat: { score: 10 } }
  ];
  
  testAssessments.forEach((assessment, index) => {
    const { totalScore, grade } = calculateDailyScore(assessment as any);
    console.log(`‡∏ó‡∏î‡∏™‡∏≠‡∏ö ${index + 1}: ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ${totalScore}/100 - ${grade}`);
  });
}

// Export function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô
export { generateDailyRecommendation, assessDailyPerformance };
